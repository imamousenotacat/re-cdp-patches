name: CDP-Patches CI

on:
  - push
  - pull_request

jobs:
  Linting:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
      - name: (Linting) isort
        run: isort . --check-only
      - name: (Linting) Flake8
        run: flake8 .
      - name: (Linting) MyPy
        run: |
          mypy --install-types --non-interactive
          mypy .
      - name: (Linting) Black
        run: black . --check

  Build_Linux:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12' ]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install -e .
        python -c "import os; os.environ['TOKENIZERS_PARALLELISM'] = 'false'"
#    - name: Install Chrome Browser
#      uses: browser-actions/setup-chrome@v2
#      with:
#        install-dependencies: true
    - name: Install Chromium Driver
      run: python -m playwright install chromium # --with-deps # Only for local executions
    - name: Test with PyTest
      run: |
        xvfb-run pytest -v -rA -s
        echo "Exit code from pytest: $?"

  Build_Windows:
    strategy:
      matrix:
        os: [ windows-latest ] # I think I can't run this in nektos/act ;-( ...
        python-version: [ '3.12' ]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install -e .
        python -c "import os; os.environ['TOKENIZERS_PARALLELISM'] = 'false'"
#    - name: Install Chrome Browser
#      uses: browser-actions/setup-chrome@v2
#      with:
#        install-dependencies: true
    - name: Install Chromium Driver
      run: python -m playwright install chromium
    - name: Test with PyTest
      run: |
        pytest -v -rA -s
        echo "Exit code from pytest: $?"
